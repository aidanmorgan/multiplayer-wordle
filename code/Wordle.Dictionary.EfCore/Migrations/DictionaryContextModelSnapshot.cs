// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wordle.Dictionary.EfCore;

#nullable disable

namespace Wordle.Dictionary.EfCore.Migrations
{
    [DbContext(typeof(DictionaryContext))]
    partial class DictionaryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wordle.Dictionary.EfCore.Entry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<long>("Id"), 1L, null, null, null, null, null);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("language");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("word");

                    b.Property<int>("WordLength")
                        .HasColumnType("integer")
                        .HasColumnName("wordlength");

                    b.HasKey("Id")
                        .HasName("pk_words");

                    b.HasIndex("Language", "WordLength")
                        .HasDatabaseName("ix_words_language_wordlength");

                    b.ToTable("words", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
